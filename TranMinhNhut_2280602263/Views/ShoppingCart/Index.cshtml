@model ShoppingCart
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Giỏ hàng của bạn";
    var user = await UserManager.GetUserAsync(User);
    var isCustomer = await UserManager.IsInRoleAsync(user, "Customer");
}

<div class="container py-5">
    <h2 class="text-center mb-4">Giỏ hàng</h2>

    @if (!isCustomer)
    {
        <div class="alert alert-warning text-center">
            <i class="bi bi-exclamation-triangle me-2"></i>
            Bạn cần có tài khoản khách hàng để thực hiện mua hàng.
        </div>
    }
    else if (!Model.Items.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x" style="font-size: 4rem; color: #ddd;"></i>
            <h3 class="mt-3">Giỏ hàng trống</h3>
            <p class="text-muted">Hãy thêm sản phẩm vào giỏ hàng và quay lại đây để hoàn tất đơn hàng.</p>
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary mt-3">
                <i class="bi bi-arrow-left me-2"></i>Tiếp tục mua sắm
            </a>
        </div>
    }
    else
    {
        <div class="row">
            <!-- Cart Items -->
            <div class="col-lg-8">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="card-title mb-0">Giỏ hàng của bạn</h5>
                            <form asp-action="ClearCart" method="post" style="display: inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-outline-danger btn-sm"
                                        onclick="return confirm('Bạn có chắc muốn xóa tất cả sản phẩm trong giỏ hàng?')">
                                    <i class="bi bi-trash me-2"></i>Xóa tất cả
                                </button>
                            </form>
                        </div>

                        @foreach (var item in Model.Items)
                        {
                            <div class="card mb-3">
                                <div class="row g-0">
                                    <div class="col-md-2">
                                        <img src="@item.ImageUrl" class="img-fluid rounded-start"
                                             alt="@item.Name" style="height: 100%; object-fit: cover;">
                                    </div>
                                    <div class="col-md-10">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div>
                                                    <h5 class="card-title">@item.Name</h5>
                                                    <p class="card-text text-muted">
                                                        Đơn giá: @item.Price.ToString("#,##0") VND
                                                    </p>
                                                </div>
                                                <a asp-action="RemoveFromCart" asp-route-productId="@item.ProductId"
                                                   class="btn btn-outline-danger btn-sm"
                                                   onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>

                                            <div class="d-flex justify-content-between align-items-center mt-3">
                                                <div class="input-group" style="width: 150px;">
                                                    <button class="btn btn-outline-secondary" type="button"
                                                            onclick="updateQuantity(@item.ProductId, -1)">
                                                        <i class="bi bi-dash"></i>
                                                    </button>
                                                    <input type="number" class="form-control text-center"
                                                           id="quantity-@item.ProductId"
                                                           value="@item.Quantity" min="1">
                                                    <button class="btn btn-outline-secondary" type="button"
                                                            onclick="updateQuantity(@item.ProductId, 1)">
                                                        <i class="bi bi-plus"></i>
                                                    </button>
                                                </div>
                                                <h5 class="mb-0 text-primary">
                                                    @((item.Price * item.Quantity).ToString("#,##0")) VND
                                                </h5>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.Items.Any())
                        {
                            <div class="alert alert-info mt-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span>
                                        <i class="bi bi-info-circle me-2"></i>
                                        Tổng số sản phẩm: @Model.Items.Sum(i => i.Quantity)
                                    </span>
                                    <span>
                                        <strong>Tổng tiền: </strong>
                                        @Model.Items.Sum(i => i.Price * i.Quantity).ToString("#,##0") VND
                                    </span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Tổng đơn hàng</h5>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Tạm tính</span>
                            <span>@Model.Items.Sum(i => i.Price * i.Quantity).ToString("#,##0") VND</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Phí vận chuyển</span>
                            <span class="text-success">Miễn phí</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <strong>Tổng cộng</strong>
                            <strong>@Model.Items.Sum(i => i.Price * i.Quantity).ToString("#,##0") VND</strong>
                        </div>
                        @if (isCustomer)
                        {
                            <a asp-action="Checkout" class="btn btn-primary w-100">
                                <i class="bi bi-credit-card me-2"></i>Tiến hành thanh toán
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-secondary w-100" disabled>
                                <i class="bi bi-lock me-2"></i>Chỉ khách hàng mới có thể đặt hàng
                            </button>
                        }
                        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary w-100 mt-2">
                            <i class="bi bi-arrow-left me-2"></i>Tiếp tục mua sắm
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateQuantity(productId, change) {
            let input = document.getElementById('quantity-' + productId);
            let currentValue = parseInt(input.value);

            if (change !== 0) {
                let newValue = currentValue + change;
                if (newValue < 1) return;
                input.value = newValue;
            }

            // Disable các nút trong khi đang cập nhật
            let buttons = document.querySelectorAll('button');
            buttons.forEach(button => button.disabled = true);

            $.post('/ShoppingCart/UpdateQuantity', {
                productId: productId,
                quantity: input.value
            })
            .done(function (response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra khi cập nhật số lượng');
                    location.reload();
                }
            })
            .fail(function () {
                alert('Có lỗi xảy ra khi cập nhật số lượng');
                location.reload();
            })
            .always(function () {
                buttons.forEach(button => button.disabled = false);
            });
        }

        // Auto dismiss alerts
        setTimeout(function () {
            $('.alert').alert('close');
        }, 3000);
    </script>
}
